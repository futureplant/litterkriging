setwd("D:/GIS Files/amphiR/amphibians")
shiny::runApp()
runApp()
runApp()
runApp()
print (length(waterpoints))
# url of gsheet which contains form answers
url <- 'https://docs.google.com/spreadsheets/d/1rHUTv2m6N1cmx4gP0zwKxRBQok9Zr-FEBmf90Ksp7eU'
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
pools <- getPools(dtf)
forbidden <- getNoAccess(dtf)
incompletes <- getIncomplete(dtf)
impossibles <- getImpossibles(dtf)
completes <- getCompletes(dtf)
waterpoints <- getPoints()
# get rd of this line if it doesn't work
waterpoints = waterpoints[!waterpoints$OBJECTID %in% pools,]
waterpoints = waterpoints[!waterpoints$OBJECTID %in% forbidden,]
waterpoints = waterpoints[!waterpoints$OBJECTID %in% impossibles,]
print (length(waterpoints))
print (waterpoints)
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
pools <- getPools(dtf)
forbidden <- getNoAccess(dtf)
incompletes <- getIncomplete(dtf)
impossibles <- getImpossibles(dtf)
completes <- getCompletes(dtf)
waterpoints <- getPoints()
# get rd of this line if it doesn't work
waterpoints = waterpoints[!waterpoints$OBJECTID %in% pools,]
#waterpoints = waterpoints[!waterpoints$OBJECTID %in% forbidden,]
waterpoints = waterpoints[!waterpoints$OBJECTID %in% impossibles,]
print (waterpoints)
runApp()
library(shiny)
library(shinydashboard)
library(leaflet)
source("ui.R",encoding = "Latin1")
source("scripts/getpoints.R")
source("scripts/hyperlinks.R")
source("scripts/readgsheets.R",encoding = "Latin1")
# url of gsheet which contains form answers
url <- 'https://docs.google.com/spreadsheets/d/1rHUTv2m6N1cmx4gP0zwKxRBQok9Zr-FEBmf90Ksp7eU'
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
names(dtf)
head(dtf$El.punt.d.aigua.és.adequat.)
dtf$El.punt.d.aigua.és.adequat.
library(shiny)
library(shinydashboard)
library(leaflet)
source("ui.R",encoding = "Latin1")
source("scripts/getpoints.R")
source("scripts/hyperlinks.R")
source("scripts/readgsheets.R",encoding = "Latin1")
# url of gsheet which contains form answers
url <- 'https://docs.google.com/spreadsheets/d/1rHUTv2m6N1cmx4gP0zwKxRBQok9Zr-FEBmf90Ksp7eU'
# creates dataframe from google sheet answers
dtf <- read.csv(text=gsheet2text(url, format='csv'), stringsAsFactors=FALSE,fileEncoding = "UTF-8",encoding = "UTF-8")
getAdequates(dtf)
waterpoints = waterpoints[waterpoints$OBJECTID %in% adequates,]
waterpoints <- getPoints()
waterpoints = waterpoints[waterpoints$OBJECTID %in% adequates,]
adequates   <- getAdequates(dtf)
waterpoints = waterpoints[waterpoints$OBJECTID %in% adequates,]
waterpoints
dtf[which(dtf$El.punt.d.aigua.és.adequat. == "Si"),]
dtf[which(dtf$El.punt.d.aigua.és.adequat. == "Si"),7]
dtf[which(dtf$El.punt.d.aigua.és.adequat. == "No (piscina, ciment, edifici...)"),2]
source("scripts/readgsheets.R",encoding = "Latin1")
source("scripts/readgsheets.R",encoding = "Latin1")
waterpoints = waterpoints[waterpoints$OBJECTID %in% adequates,]
waterpoints
waterpoints = waterpoints[!waterpoints$OBJECTID %in% inadequates,]
inadequates <- getInAdequates(dtf)
waterpoints = waterpoints[!waterpoints$OBJECTID %in% inadequates,]
waterpoints
runApp()
waterpoints = waterpoints[!waterpoints$OBJECTID %in% impossibles,]
impossibles <- getImpossibles(dtf) # assessment app code
waterpoints = waterpoints[!waterpoints$OBJECTID %in% impossibles,]
runApp()
runApp()
runApp()
accessibles <- getAccessibles(dtf)
waterpoints = waterpoints[!waterpoints$OBJECTID %in% accessibles,]
runApp()
